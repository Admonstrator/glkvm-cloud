# Images
GLKVM_IMAGE=glzhitong/glkvm-cloud:latest
COTURN_IMAGE=coturn/coturn:edge-alpine
CADDY_IMAGE=caddy:latest

# ============================================================
# Caddy Automatic HTTPS/TLS Configuration (Optional)
# ============================================================
# To enable Caddy with automatic Let's Encrypt SSL certificates:
# 1. Set DOMAIN to your domain name (e.g., kvm.example.com)
# 2. Set ACME_EMAIL to receive Let's Encrypt notifications
# 3. Start with: docker-compose -f docker-compose.yml -f docker-compose.caddy.yml up -d
#
# Requirements:
# - Domain must be publicly accessible and point to your server IP
# - Ports 80 and 443 must be open for Let's Encrypt validation
# - For wildcard certificates (*.domain.com), DNS-01 challenge is required
#
# Leave DOMAIN empty to use the default setup (self-signed certificates via rttys)
DOMAIN=
ACME_EMAIL=

# Internal ports used by rttys when behind Caddy reverse proxy
# These ports are only accessible within the Docker network
# Caddy will proxy external ports 443 and 10443 to these internal ports
RTTYS_WEBUI_INTERNAL_PORT=8443
RTTYS_HTTP_PROXY_INTERNAL_PORT=18443

# GLKVM access IP seen by devices/users.
# Leave empty to auto-detect at container start.
# Note: If using Caddy with DOMAIN, this will be derived from the domain.
GLKVM_ACCESS_IP=

# rttys
RTTYS_TOKEN=DeviceTokenYouCanChangeMe
RTTYS_PASS=StrongP@ssw0rd
RTTYS_DEVICE_PORT=5912
RTTYS_WEBUI_PORT=443
RTTYS_HTTP_PROXY_PORT=10443

# TURN
TURN_PORT=3478
TURN_USER=glkvmcloudwebrtcuser
TURN_PASS=AnotherS3cret

# LDAP Authentication (Optional)
LDAP_ENABLED=false
LDAP_SERVER=your-ldap-server.com
LDAP_PORT=389
LDAP_USE_TLS=false
LDAP_BIND_DN=cn=service-account,ou=users,dc=company,dc=com
LDAP_BIND_PASSWORD=service-password
LDAP_BASE_DN=ou=users,dc=company,dc=com

# User filter examples for different LDAP implementations:
# Active Directory: (&(objectClass=person)(sAMAccountName=%s))
# OpenLDAP: (&(objectClass=inetOrgPerson)(uid=%s))
# FreeIPA: (&(objectClass=person)(uid=%s))
# Generic LDAP: (uid=%s)
LDAP_USER_FILTER=(uid=%s)

LDAP_ALLOWED_GROUPS=admins,operators
LDAP_ALLOWED_USERS=user1,user2
