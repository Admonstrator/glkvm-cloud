services:
  rttys:
    image: ${GLKVM_IMAGE:-glzhitong/glkvm-cloud:latest}
    container_name: glkvm_cloud
    restart: always
    environment:
      # Preferred: set GLKVM_ACCESS_IP explicitly; if empty, entrypoint will auto-detect once.
      GLKVM_ACCESS_IP: ${GLKVM_ACCESS_IP:-}

      # ---- rttys ----
      RTTYS_TOKEN: ${RTTYS_TOKEN:-DeviceTokenYouCanChangeMe}
      RTTYS_PASS: ${RTTYS_PASS:-StrongP@ssw0rd}

      # Ports inside container (mirrored to host via `ports` below)
      # When USE_CADDY=true, internal ports are used; otherwise, standard ports
      RTTYS_DEVICE_PORT: ${RTTYS_DEVICE_PORT:-5912}
      RTTYS_WEBUI_PORT: ${RTTYS_WEBUI_PORT:-443}
      RTTYS_HTTP_PROXY_PORT: ${RTTYS_HTTP_PROXY_PORT:-10443}

      # WebRTC / TURN reference (used by rttys template)
      TURN_PORT: ${TURN_PORT:-3478}
      TURN_USER: ${TURN_USER:-glkvmcloudwebrtcuser}
      TURN_PASS: ${TURN_PASS:-AnotherS3cret}

      # ---- LDAP Configuration ----
      LDAP_ENABLED: ${LDAP_ENABLED:-false}
      LDAP_SERVER: ${LDAP_SERVER:-}
      LDAP_PORT: ${LDAP_PORT:-389}
      LDAP_USE_TLS: ${LDAP_USE_TLS:-false}
      LDAP_BIND_DN: ${LDAP_BIND_DN:-}
      LDAP_BIND_PASSWORD: ${LDAP_BIND_PASSWORD:-}
      LDAP_BASE_DN: ${LDAP_BASE_DN:-}
      LDAP_USER_FILTER: ${LDAP_USER_FILTER:-(uid=%s)}
      LDAP_ALLOWED_GROUPS: ${LDAP_ALLOWED_GROUPS:-}
      LDAP_ALLOWED_USERS: ${LDAP_ALLOWED_USERS:-}
    volumes:
      - ./docker-compose/templates/rttys.conf.template:/tpl/rttys.conf.tmpl:ro
      - ./docker-compose/scripts/docker-entrypoint.sh:/docker-entrypoint.sh:ro
      # SSL certificates are only mounted when not using Caddy
      # When USE_CADDY=true, these volumes should not be mounted to allow HTTP mode
      - ./docker-compose/certificate/glkvm.cer:/home/certificate/glkvm_cer:ro
      - ./docker-compose/certificate/glkvm.key:/home/certificate/glkvm_key:ro
    entrypoint: ["/bin/sh", "/docker-entrypoint.sh"]
    command: ["rttys"]
    ports:
      - "${RTTYS_WEBUI_PORT:-443}:${RTTYS_WEBUI_PORT:-443}"
      - "${RTTYS_HTTP_PROXY_PORT:-10443}:${RTTYS_HTTP_PROXY_PORT:-10443}"
      - "${RTTYS_DEVICE_PORT:-5912}:${RTTYS_DEVICE_PORT:-5912}"

  coturn:
    image: ${COTURN_IMAGE:-coturn/coturn:edge-alpine}
    container_name: glkvm_coturn
    restart: always
    environment:
      # Same semantics as above: prefer explicit value, else auto-detect
      GLKVM_ACCESS_IP: ${GLKVM_ACCESS_IP:-}
      TURN_PORT: ${TURN_PORT:-3478}
      TURN_USER: ${TURN_USER:-glkvmcloudwebrtcuser}
      TURN_PASS: ${TURN_PASS:-AnotherS3cret}
    entrypoint: ["/bin/sh", "/docker-entrypoint.sh"]
    command: ["coturn"]
    volumes:
      - ./docker-compose/templates/turnserver.conf.template:/tpl/turnserver.conf.tmpl:ro
      - ./docker-compose/scripts/docker-entrypoint.sh:/docker-entrypoint.sh:ro
    ports:
      - "${TURN_PORT:-3478}:3478/tcp"
      - "${TURN_PORT:-3478}:3478/udp"

  # Caddy reverse proxy with automatic HTTPS/TLS (optional, enabled with profile)
  # To enable: Set USE_CADDY=true in .env OR use: docker compose --profile caddy up -d
  caddy:
    image: ${CADDY_IMAGE:-caddy:latest}
    container_name: glkvm_caddy
    restart: always
    profiles: ["caddy"]
    ports:
      # HTTP for ACME challenges and automatic redirect to HTTPS
      - "80:80"
      # HTTPS for secure access
      - "443:443"
      - "443:443/udp"  # HTTP/3 support
      # HTTP Proxy port (proxied by Caddy with TLS)
      - "10443:10443"
    volumes:
      - ./docker-compose/templates/Caddyfile.template:/tpl/Caddyfile.tmpl:ro
      - ./docker-compose/scripts/docker-entrypoint.sh:/docker-entrypoint.sh:ro
      - caddy_data:/data
      - caddy_config:/config
    environment:
      DOMAIN: ${DOMAIN}
      ACME_EMAIL: ${ACME_EMAIL}
      RTTYS_WEBUI_INTERNAL_PORT: ${RTTYS_WEBUI_INTERNAL_PORT:-8443}
      RTTYS_HTTP_PROXY_INTERNAL_PORT: ${RTTYS_HTTP_PROXY_INTERNAL_PORT:-18443}
    entrypoint: ["/bin/sh", "/docker-entrypoint.sh"]
    command: ["caddy"]
    depends_on:
      - rttys

volumes:
  caddy_data:
    driver: local
  caddy_config:
    driver: local
